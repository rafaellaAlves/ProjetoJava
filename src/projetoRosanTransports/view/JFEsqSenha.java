/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetoRosanTransports.view;

import java.awt.Color;
import javax.mail.BodyPart;
import javax.mail.Transport;
import javax.mail.MessagingException;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Random;
import javax.mail.Session;
import javax.mail.PasswordAuthentication;
import javax.mail.Message;
import javax.swing.JOptionPane;
import java.util.GregorianCalendar;
import java.util.Properties;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import projetoRosanTransports.data.administradorData;
import projetoRosanTransports.data.motoristaData;
import projetoRosanTransports.model.administradorModel;
import projetoRosanTransports.model.motoristaModel;

/**
 *
 * @author Rafaella Alves Silva
 */
public class JFEsqSenha extends javax.swing.JFrame {

    Calendar cal = new GregorianCalendar();
    motoristaModel obj1 = new motoristaModel();
    administradorModel obj2 = new administradorModel();
    motoristaData DAO1 = new motoristaData();
    administradorData DAO2 = new administradorData();
    /**
     * Creates new form JFEsqSenha
     */
    public JFEsqSenha() {
        initComponents();
        
         jlAlerta3.setVisible(false);
        
        this.getContentPane().setBackground(new Color(153,153,153));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/projetoRosanTransports/imagens/caminhao3.jpg")));
    
    }
    
    public void Validacao(){
         if (jtEmail.getText().equals("")) {
                jlAlerta3.setVisible(true);
                jlAlerta3.setForeground(Color.RED);                
                JOptionPane.showMessageDialog(this, "Erro \nCampo E-mail não Preenchidos", "Redefinir senha", JOptionPane.ERROR_MESSAGE);
            }if (jtEmail.getText().length() < 0) {
                jlAlerta3.setVisible(false);
                JOptionPane.showMessageDialog(this, "Erro \n E-mail incorreto!", "Login", JOptionPane.ERROR_MESSAGE);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtEmail = new javax.swing.JTextField();
        jbEnviar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jlAlerta3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("R SILVA TRANSPORTES");
        setResizable(false);

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setFont(new java.awt.Font("Cinzel Black", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Redefinir Senha");
        jTextField1.setBorder(null);

        jLabel2.setFont(new java.awt.Font("Cinzel Black", 0, 14)); // NOI18N
        jLabel2.setText("E-mail cadastrado:");

        jtEmail.setFont(new java.awt.Font("Bahnschrift", 0, 11)); // NOI18N

        jbEnviar.setBackground(new java.awt.Color(0, 0, 0));
        jbEnviar.setFont(new java.awt.Font("Cinzel Black", 0, 12)); // NOI18N
        jbEnviar.setForeground(new java.awt.Color(255, 255, 255));
        jbEnviar.setText("Enviar");
        jbEnviar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jbEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnviarActionPerformed(evt);
            }
        });

        jbCancelar.setBackground(new java.awt.Color(0, 0, 0));
        jbCancelar.setFont(new java.awt.Font("Cinzel Black", 0, 12)); // NOI18N
        jbCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jlAlerta3.setFont(new java.awt.Font("Bahnschrift", 0, 11)); // NOI18N
        jlAlerta3.setText("*Campo obrigatório");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlAlerta3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jbEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlAlerta3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnviarActionPerformed
        // TODO add your handling code here:
        Validacao();
        try {
            obj1 = DAO1.VerEmail(jtEmail.getText());
            if(obj1==null){
                obj2 = DAO2.VerEmail(jtEmail.getText());
                if(obj2==null){
                    JOptionPane.showMessageDialog(this, "Error \nE-mail não encontrado no sistema!", "Login", JOptionPane.ERROR_MESSAGE);
                }else{
                    obj2.setSenhaAdm(aleatorio());
                    EnviarEmail();
                    obj2.setSenhaAdm(Criptografar.encriptografar(obj2.getSenhaAdm()));
                    DAO2.AlterarSenha(obj2);
                }
            }else{
                obj1.setSenhaMotorista(aleatorio());
                EnviarEmail();
                obj1.setSenhaMotorista(Criptografar.encriptografar(obj1.getSenhaMotorista()));
                DAO1.AlterarSenha(obj1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Email incorreto!!");
        }
    }//GEN-LAST:event_jbEnviarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFEsqSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFEsqSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFEsqSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFEsqSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFEsqSenha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEnviar;
    private javax.swing.JLabel jlAlerta3;
    private javax.swing.JTextField jtEmail;
    // End of variables declaration//GEN-END:variables
public String aleatorio() {
        Random gerador = new Random(19700621 * cal.get(Calendar.DAY_OF_MONTH));
        Random rand = new Random(19700621);//Random float
        float result = ((10 + rand.nextInt(30)) + (rand.nextFloat())) * gerador.nextInt(900) * cal.get(Calendar.DAY_OF_MONTH) * cal.get(Calendar.HOUR) * cal.get(Calendar.MINUTE) * cal.get(Calendar.SECOND);
        String caracteresSalgados = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";//Random String
        StringBuilder sao = new StringBuilder();
        Random geradorS = new Random(cal.get(Calendar.HOUR) * cal.get(Calendar.DAY_OF_MONTH));
        while (sao.length() < 18) { // tamanho da String aleatória
            int index = (int) (geradorS.nextFloat() * caracteresSalgados.length());
            sao.append(caracteresSalgados.charAt(index));
        }
        String stringSalgada = sao.toString();
        String resultS = "" + result;
        final int aLength = stringSalgada.length();
        final int bLength = resultS.length();
        final int min = Math.min(aLength, bLength);
        final StringBuilder sb = new StringBuilder(aLength + bLength);
        for (int i = 0; i < min; i++) {
            sb.append(stringSalgada.charAt(i));
            sb.append(resultS.charAt(i));
        }
        if (aLength > bLength) {
            sb.append(stringSalgada, bLength, aLength);
        } else if (aLength < bLength) {
            sb.append(resultS, aLength, bLength);
        }
        return sb.toString();
    }

public void EnviarEmail() {
    
        if(obj1==null){
            String to = obj2.getEmailPessoa();
            String from = "rosangelasilvatransportes@hotmail.com";
            final String username = "rosangelasilvatransportes@hotmail.com";
            final String password = "rsilvatransportes@123";
            String host = "localhost";
            Properties props = new Properties();
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.secure", "ssl");
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");
            Session session = Session.getInstance(props,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password);
                }
            });
            try {
                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress(from));
                message.setRecipients(Message.RecipientType.TO,
                        InternetAddress.parse(to));
                message.setSubject("Redefinição de Senha");
                MimeMultipart multipart = new MimeMultipart("related");
                // first part (the html)
                BodyPart messageBodyPart = new MimeBodyPart();
                String htmlText = "<img src=\"cid:image\"><H2>Ol&aacute; " + obj2.getNomePessoa()+ ", voc&ecirc; recebeu um email de redefini&ccedil;&atilde;o de senha !<br /><br /> <font size=\"4\" face=\"Arial\"> Fa&ccedil;a Login com sua nova Senha: " + obj2.getSenhaAdm()+ " <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> N&atilde;o foi voc&ecirc; ? Contate seu Administrador de Sistema. <br /> Email autom&aacute;tico, n&atilde;o responda.</H2>";
                messageBodyPart.setContent(htmlText, "text/html");
                // add it
                multipart.addBodyPart(messageBodyPart);
                // second part (the image)
                messageBodyPart = new MimeBodyPart();
                DataSource fds = new FileDataSource(
                        "C:\\Users\\Alexandre\\Documents\\NetBeansProjects\\projetoFarmacia\\src\\br\\edu\\ifsp\\vtp\\projetoFarmacia\\imagens\\ologoEmail.png");
                messageBodyPart.setDataHandler(new DataHandler(fds));
                messageBodyPart.setHeader("Content-ID", "<image>");
                // add image to the multipart
                multipart.addBodyPart(messageBodyPart);
                // put everything together
                message.setContent(multipart);
                // Send message
                Transport.send(message);
                JOptionPane.showMessageDialog(null, "Email enviado com sucesso !");
            } catch (MessagingException e) {
                throw new RuntimeException(e);
            }
        }else{
            String to = obj1.getEmailPessoa();
            String from = "rosangelasilvatransportes@hotmail.com";
            final String username = "rosangelasilvatransportes@hotmail.com";
            final String password = "rsilvatransportes@123";
            String host = "localhost";
            Properties props = new Properties();
            props.setProperty("mail.transport.protocol", "smtp");     
            props.setProperty("mail.host", "smtp.gmail.com");  
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");
//            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.socketFactory.port", "465");  
            props.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");  
            props.put("mail.smtp.socketFactory.fallback", "false");  
            Session session = Session.getInstance(props,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password);
                }
            });
            try {
                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress(from));
                message.setRecipients(Message.RecipientType.TO,
                        InternetAddress.parse(to));
                message.setSubject("Redefinição de Senha");
                MimeMultipart multipart = new MimeMultipart("related");
                // first part (the html)
                BodyPart messageBodyPart = new MimeBodyPart();
                String htmlText = "<img src=\"cid:image\"><H2>Ol&aacute; " + obj1.getNomePessoa()+ ", voc&ecirc; recebeu um email de redefini&ccedil;&atilde;o de senha !<br /><br /> <font size=\"4\" face=\"Arial\"> Fa&ccedil;a Login com sua nova Senha: " + obj1.getSenhaMotorista()+ " <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> N&atilde;o foi voc&ecirc; ? Contate seu Administrador de Sistema. <br /> Email autom&aacute;tico, n&atilde;o responda.</H2>";
                messageBodyPart.setContent(htmlText, "text/html");
                // add it
                multipart.addBodyPart(messageBodyPart);
                // second part (the image)
                messageBodyPart = new MimeBodyPart();
                DataSource fds = new FileDataSource(
                        "C:\\Users\\Rafaella Alves Silva\\OneDrive\\Documentos\\RosanTransports\\Aplicação\\projetoRosanTransports\\src\\projetoRosanTransports\\imagens\\logo-Copia.png");
                messageBodyPart.setDataHandler(new DataHandler(fds));
                messageBodyPart.setHeader("Content-ID", "<image>");
                // add image to the multipart
                multipart.addBodyPart(messageBodyPart);
                // put everything together
                message.setContent(multipart);
                // Send message
                Transport.send(message);
                JOptionPane.showMessageDialog(null, "Email enviado com sucesso !");
            } catch (MessagingException e) {
                throw new RuntimeException(e);
            }
        }
    }
  
}
